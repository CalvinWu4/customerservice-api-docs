GetTests:// Test whether the response is valid↵tests["Status code is 200"] = responseCode.code === 200;↵↵// Test whether the response matches the schema↵var result = JSON.parse(responseBody);↵tests["Schema is valid"] = tv4.validate(result, schema);
PostTests:// Test whether the response is valid↵tests["Status code is 200"] = responseCode.code === 200;↵↵// Test whether the response matches the schema↵var result = JSON.parse(responseBody);↵tests["Schema is valid"] = tv4.validate(result, schema);
PutTests:// Test whether the response is valid↵tests["Status code is 204"] = responseCode.code === 204;
DeleteTests:// Test whether the response is valid ↵tests["Status code is 204"] = responseCode.code === 204;
ticketSchema:{↵  "type": "object", ↵  "properties": {↵    "title": {↵      "type": "string"↵    }, ↵    "description": {↵      "type": "string"↵    }, ↵    "productId": {↵      "type": "integer"↵    }↵  }, ↵  "required": [↵    "title", ↵    "description", ↵    "productId"↵  ]↵}
ticketListSchema:{↵  "type": "object", ↵  "properties": {↵    "title": {↵      "type": "string"↵    }, ↵    "description": {↵      "type": "string"↵    }, ↵    "productId": {↵      "type": "integer"↵    }↵  }, ↵  "required": [↵    "title", ↵    "description", ↵    "productId"↵  ]↵}
clientSchema:{↵  "type": "array", ↵  "items": {↵    "type": "object", ↵    "properties": {↵      "id": {↵        "type": "integer"↵      }, ↵      "firstName": {↵        "type": "string"↵      }, ↵      "lastName": {↵        "type": "string"↵      }, ↵      "email": {↵        "type": "string"↵      }↵    }, ↵    "required": [↵      "id", ↵      "firstName", ↵      "lastName", ↵      "email"↵    ]↵  }↵}
clientListSchema:{↵  "type": "array", ↵  "items": {↵    "type": "object", ↵    "properties": {↵      "id": {↵        "type": "integer"↵      }, ↵      "firstName": {↵        "type": "string"↵      }, ↵      "lastName": {↵        "type": "string"↵      }, ↵      "email": {↵        "type": "string"↵      }↵    }, ↵    "required": [↵      "id", ↵      "firstName", ↵      "lastName", ↵      "email"↵    ]↵  }↵}
reviewSchema:{↵  "type": "object", ↵  "properties": {↵    "id": {↵      "type": "integer"↵    }, ↵    "content": {↵      "type": "string"↵    }, ↵    "client": {↵      "type": "object", ↵      "properties": {↵        "id": {↵          "type": "integer"↵        }, ↵        "firstName": {↵          "type": "string"↵        }, ↵        "lastName": {↵          "type": "string"↵        }, ↵        "email": {↵          "type": "string"↵        }, ↵        "address": {↵          "type": "object", ↵          "properties": {↵            "line1": {↵              "type": "string"↵            }, ↵            "line2": {↵              "type": "string"↵            }, ↵            "city": {↵              "type": "string"↵            }, ↵            "state": {↵              "type": "string"↵            }, ↵            "zipcode": {↵              "type": "string"↵            }↵          }, ↵          "required": [↵            "line1", ↵            "line2", ↵            "city", ↵            "state", ↵            "zipcode"↵          ]↵        }↵      }, ↵      "required": [↵        "id", ↵        "firstName", ↵        "lastName", ↵        "email", ↵        "address"↵      ]↵    }, ↵    "agent": {↵      "type": "object", ↵      "properties": {↵        "id": {↵          "type": "integer"↵        }, ↵        "firstName": {↵          "type": "string"↵        }, ↵        "lastName": {↵          "type": "string"↵        }↵      }, ↵      "required": [↵        "id", ↵        "firstName", ↵        "lastName"↵      ]↵    }, ↵    "dateCreated": {↵      "type": "string"↵    }↵  }, ↵  "required": [↵    "id", ↵    "content", ↵    "client", ↵    "agent", ↵    "dateCreated"↵  ]↵}
reviewListSchema:{↵  "type": "array", ↵  "items": {↵    "type": "object", ↵    "properties": {↵      "id": {↵        "type": "integer"↵      }, ↵      "content": {↵        "type": "string"↵      }, ↵      "client": {↵        "type": "object", ↵        "properties": {↵          "id": {↵            "type": "integer"↵          }, ↵          "firstName": {↵            "type": "string"↵          }, ↵          "lastName": {↵            "type": "string"↵          }, ↵          "email": {↵            "type": "string"↵          }, ↵          "address": {↵            "type": "object", ↵            "properties": {↵              "line1": {↵                "type": "string"↵              }, ↵              "line2": {↵                "type": "string"↵              }, ↵              "city": {↵                "type": "string"↵              }, ↵              "state": {↵                "type": "string"↵              }, ↵              "zipcode": {↵                "type": "string"↵              }↵            }, ↵            "required": [↵              "line1", ↵              "line2", ↵              "city", ↵              "state", ↵              "zipcode"↵            ]↵          }↵        }, ↵        "required": [↵          "id", ↵          "firstName", ↵          "lastName", ↵          "email", ↵          "address"↵        ]↵      }, ↵      "agent": {↵        "type": "object", ↵        "properties": {↵          "id": {↵            "type": "integer"↵          }, ↵          "firstName": {↵            "type": "string"↵          }, ↵          "lastName": {↵            "type": "string"↵          }↵        }, ↵        "required": [↵          "id", ↵          "firstName", ↵          "lastName"↵        ]↵      }, ↵      "dateCreated": {↵        "type": "string"↵      }↵    }, ↵    "required": [↵      "id", ↵      "content", ↵      "client", ↵      "agent", ↵      "dateCreated"↵    ]↵  }↵}
commentSchema:{↵  "type": "object", ↵  "definitions": {}, ↵  "properties": {↵    "id": {↵      "type": "integer"↵    }, ↵    "ticketId": {↵      "type": "integer"↵    }, ↵    "content": {↵      "type": "string"↵    }, ↵    "author": {↵      "type": "integer"↵    }, ↵    "commentedBy": {↵      "type": "string"↵    }, ↵    "dateCreated": {↵      "type": "string"↵    }↵  }, ↵  "required": [↵    "id", ↵    "ticketId", ↵    "content", ↵    "author", ↵    "commentedBy", ↵    "dateCreated"↵  ]↵}
commentListSchema:{↵  "type": "array", ↵  "items": {↵    "type": "object", ↵    "properties": {↵      "id": {↵        "type": "integer"↵      }, ↵      "ticketId": {↵        "type": "integer"↵      }, ↵      "content": {↵        "type": "string"↵      }, ↵      "author": {↵        "type": "integer"↵      }, ↵      "commentedBy": {↵        "type": "string"↵      }, ↵      "dateCreated": {↵        "type": "string"↵      }↵    }, ↵    "required": [↵      "id", ↵      "ticketId", ↵      "content", ↵      "author", ↵      "commentedBy", ↵      "dateCreated"↵    ]↵  }↵}